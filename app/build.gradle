/*
 * Copyright 2021 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'kotlin-kapt'
    alias(libs.plugins.kserialization)
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.ksp)
    id 'kotlin-parcelize'
}

android {
    compileSdk libs.versions.compileSdk.get().toInteger()

    defaultConfig {
        applicationId "com.prometheontechnologies.aviationweatherwatchface.complication"
        minSdk libs.versions.minSdk.get().toInteger()
        targetSdk libs.versions.targetSdk.get().toInteger()
        ksp {
            arg("room.schemaLocation", "$projectDir/schemas")
        }
        versionCode 1
        versionName "1.0"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
        freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
        // Enable Coroutines and Flow APIs
        freeCompilerArgs += "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
        freeCompilerArgs += "-opt-in=kotlinx.coroutines.FlowPreview"
    }
    buildFeatures {
        compose true
        dataBinding true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.compiler.get()
    }
    packagingOptions {
        resources {
            // Studio default, files not needed for APK, so excluded. If you include the same file
            // with the same path more than once in the output, you'll get a build conflict.
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    //Aviation Weather Watchface
    namespace 'com.prometheontechnologies.aviationweatherwatchface.complication'
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation libs.material
    implementation libs.accompanist.permissions

    // Androidx
    implementation libs.androidx.appcompat
    implementation libs.androidx.activity.ktx
    implementation libs.androidx.wearx
    implementation libs.androidx.wear.tooling.preview
    implementation libs.androidx.core.ktx
    implementation libs.androidx.constraintlayoutx

    // Retrofit
    implementation libs.retrofit.converter.gson
    implementation libs.retrofit2.kotlinx.serialization.converter
    implementation libs.retrofit2x

    // OkHttp3
    implementation libs.okhttp3x
    implementation libs.okhttp3.logging.interceptor

    // Coroutines
    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.coroutines.android
    implementation libs.kotlinx.coroutines.play.services

    // Workers
    implementation libs.androidx.work.runtime.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.io.coil.kt

    // Various Google Services
    implementation libs.playservices.wearable
    implementation libs.play.services.location
    implementation libs.gson

    // General Compose dependencies
    // Compose for Wear OS Dependencies
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material.icons.extended
    implementation libs.androidx.activity.compose
    implementation libs.androidx.compose.wear.foundation
    implementation libs.androidx.compose.foundationx
    implementation libs.androidx.compose.foundation.layout
    implementation libs.androidx.constraintlayout.compose
    implementation libs.androidx.compose.runtimex
    implementation libs.androidx.compose.runtime.livedata
    implementation libs.androidx.compose.ui.viewbinding
    implementation libs.androidx.lifecycle.viewmodel.compose
    implementation libs.androidx.compose.material
    implementation libs.androidx.compose.navigation
    implementation libs.androidx.compose.ui.tooling
    implementation libs.androidx.paging.compose
    implementation platform(libs.androidx.compose.bom)

    // Watchface dependencies
    implementation libs.wear.watchfacex
    implementation libs.wear.watchface.complications.datax
    implementation libs.wear.watchface.complications.data.source
    implementation libs.wear.watchface.client
    implementation libs.wear.watchface.complications.rendering
    implementation libs.wear.watchface.data
    implementation libs.wear.watchface.editor
    implementation libs.wear.watchface.style

    // Fs and data binding
    implementation libs.androidx.databinding.common
    implementation libs.androidx.lifecycle.livedata.ktx
    implementation libs.androidx.lifecycle.viewmodel.ktx
    implementation libs.androidx.lifecycle.service
    implementation libs.ktor.client.android
    implementation libs.androidx.material3.android
    //implementation libs.androidx.wear.complications.provider
    implementation libs.androidx.watchface.complications.data.source.ktx

    implementation libs.androidx.datastore
    implementation libs.kotlinx.collections.immutable
    implementation libs.kotlinx.serialization.json

    // Room
    implementation libs.androidx.room.runtime
    implementation libs.androidx.room.paging
    implementation libs.androidx.room.ktx
    implementation platform(libs.androidx.compose.bom)
    implementation libs.uix
    implementation libs.ui.graphics
    implementation libs.material3
    androidTestImplementation platform(libs.androidx.compose.bom)
    debugImplementation libs.ui.test.manifest
    ksp libs.androidx.room.compiler

    // Testing and Debugging
    testImplementation libs.junit
    implementation libs.androidx.espresso.core
    implementation libs.androidx.espresso.contrib
    implementation libs.androidx.espresso.intents
    implementation libs.androidx.ext.junit
    implementation libs.androidx.profileinstaller
    implementation libs.androidx.monitor
    implementation libs.androidx.work.testing
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.toolingx
    testImplementation libs.androidx.room.testing
    androidTestImplementation libs.androidx.room.testing
    testImplementation libs.kotlinx.coroutines.test
}
